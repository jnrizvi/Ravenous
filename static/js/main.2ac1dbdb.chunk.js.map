{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","App.js","serviceWorker.js","index.js"],"names":["Business","react_default","a","createElement","className","src","this","props","business","imageSrc","alt","name","address","city","state","zipCode","category","rating","reviewCount","React","Component","BusinessList","businesses","map","components_Business_Business","key","id","sortByOptions","Best Match","Highest Rated","Most Reviewed","SearchBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","term","location","sortBy","handleTermChange","bind","assertThisInitialized","handleLocationChange","handleSearch","sortByOption","setState","event","target","value","searchYelp","preventDefault","_this2","keys","sortByOptionValue","getSortByClass","onClick","handleSortByChange","renderSortByOptions","placeholder","onChange","Yelp","search","fetch","concat","headers","Authorization","then","response","json","jsonResponse","image_url","address1","categories","title","review_count","Error","App","components_SearchBar_SearchBar","components_BusinessList_BusinessList","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2ac1dbdb.chunk.js","sourcesContent":["import React from \"react\";\nimport './Business.css';\n\n\n\nclass Business extends React.Component {\n  render() {\n    return (\n    <div className=\"Business\">\n      <div className=\"image-container\">\n        <img src={this.props.business.imageSrc} alt=''/>\n      </div>\n      <h2>{this.props.business.name}</h2>\n      <div className=\"Business-information\">\n        <div className=\"Business-address\">\n          <p>{this.props.business.address}</p>\n          <p>{this.props.business.city}</p>\n          <p>{this.props.business.state}{this.props.business.zipCode}</p>\n        </div>\n        <div className=\"Business-reviews\">\n          <h3>{this.props.business.category}</h3>\n          <h3 className=\"rating\">{this.props.business.rating} stars</h3>\n          <p>{this.props.business.reviewCount} reviews</p>\n        </div>\n      </div>\n    </div>\n    );\n  }\n}\n\nexport default Business;","import React from \"react\";\nimport \"./BusinessList.css\";\nimport Business from \"../Business/Business\";\n\nclass BusinessList extends React.Component {\n  render() {\n    return (\n    <div className=\"BusinessList\">\n      {\n        this.props.businesses.map( (business)=> {\n          return <Business business={business} key={business.id}/>;\n        })\n      }\n    </div>\n    );\n  }\n}\n\nexport default BusinessList;","import React from \"react\";\nimport \"./SearchBar.css\";\n\nconst sortByOptions = {\n  \"Best Match\": \"best_match\",\n  \"Highest Rated\": \"rating\",\n  \"Most Reviewed\": \"review_count\"\n};\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      term: \"\",\n      location: \"\",\n      sortBy: \"best_match\"\n    };\n\n    /*this.sortByOptions = {\n      \"Best Match\": \"best_match\",\n      \"Highest Rated\": \"rating\",\n      \"Most Reviewed\": \"review_count\"\n    };*/\n    this.handleTermChange = this.handleTermChange.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n  }\n\n  getSortByClass(sortByOption) {\n    if (this.state.sortBy === sortByOption) {\n      return \"active\";\n    } else {\n      return \"\";\n    }\n  }\n\n  handleSortByChange(sortByOption) {\n    this.setState({sortBy: sortByOption});\n  }\n\n  handleTermChange(event) {\n    this.setState({term: event.target.value});\n\n  }\n\n  handleLocationChange(event) {\n    this.setState({location: event.target.value});\n  }\n\n  handleSearch(event) {\n    this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\n    event.preventDefault();\n  }\n\n  renderSortByOptions() {\n    return Object.keys(sortByOptions).map( (sortByOption)=> {\n      let sortByOptionValue = sortByOptions[sortByOption];\n      return <li key={sortByOptionValue} className={this.getSortByClass(sortByOptionValue)} onClick={this.handleSortByChange.bind(this, sortByOptionValue)}>{sortByOption}</li>;\n    });\n  }\n  render() {\n    return (\n    <div className=\"SearchBar\">\n      <div className=\"SearchBar-sort-options\">\n        <ul>\n          {this.renderSortByOptions()};\n        </ul>\n      </div>\n      <div className=\"SearchBar-fields\">\n        <input placeholder=\"Search Businesses\" onChange={this.handleTermChange}/>\n        <input placeholder=\"Where?\" onChange={this.handleLocationChange}/>\n      </div>\n      <div className=\"SearchBar-submit\">\n        <a onClick={this.handleSearch}>Let's Go</a>\n      </div>\n    </div>\n    );\n  }\n}\n\nexport default SearchBar;","const apiKey = \"C3Q0QAGYtb7w6yvFQ7E9bOc0mHIrBieADitE9fggRZdercJKOYK7t9iEk3S8o0pkpLP-qyQSm0lRC7-DZmgLPupTGG_Cs2oB8XkcSp_mL4BHXMmRvk6tgmx9S2TwXHYx\";\nconst Yelp = {\n    search(term, location, sortBy) {\n        return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, \n        {headers:{Authorization:`Bearer ${apiKey}`}}).then((response)=>{\n            return response.json()\n        }).then((jsonResponse)=>{\n            if (jsonResponse.businesses) {\n                return jsonResponse.businesses.map((business)=>{\n                    //console.log(business); // you can use this to find the right values in this object\n                    return {\n                        id: business.id,\n                        imageSrc: business.image_url,\n                        name: business.name,\n                        address: business.location.address1,\n                        city: business.location.city,\n                        state: business.location.state,\n                        zipCode: business.location.zipCode,\n                        category: business.categories[0].title,\n                        rating: business.rating,\n                        reviewCount: business.review_count\n                    }\n                });\n            } else {\n                throw new Error(\"An error occured.\");\n            }\n        });\n    }\n};\n\nexport default Yelp;","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport BusinessList from \"./components/BusinessList/BusinessList\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\nimport Yelp from \"./util/Yelp.js\";\n\n// const business = {\n//   imageSrc: 'https://s3.amazonaws.com/codecademy-content/programs/react/ravenous/pizza.jpg',\n//   name: 'MarginOtto Pizzeria',\n//   address: '1010 Paddington Way',\n//   city: 'Flavortown',\n//   state: 'NY',\n//   zipCode: '10101',\n//   category: 'Italian',\n//   rating: 4.5,\n//   reviewCount: 90\n// };\n\n// const businesses = [business, business, business, business, business, business];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {businesses: []};\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n  searchYelp(term, location, sortBy) {\n    // console.log(`Searching Yelp with ${term}, ${location}, ${sortBy}`);\n    Yelp.search(term, location, sortBy).then((businesses)=>{this.setState({businesses: businesses})});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>ravenous</h1>\n        <SearchBar searchYelp={this.searchYelp}/>\n        <BusinessList businesses={this.state.businesses}/> \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}